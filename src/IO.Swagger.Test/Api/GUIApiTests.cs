/* 
 * SaridaEdgeAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing GUIApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class GUIApiTests
    {
        private GUIApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new GUIApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GUIApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' GUIApi
            //Assert.IsInstanceOfType(typeof(GUIApi), instance, "instance is a GUIApi");
        }

        /// <summary>
        /// Test ControlGuiDetectionAreaVisibilityGet
        /// </summary>
        [Test]
        public void ControlGuiDetectionAreaVisibilityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ControlGuiDetectionAreaVisibilityGet();
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        /// <summary>
        /// Test ControlGuiDetectionAreaVisibilityPost
        /// </summary>
        [Test]
        public void ControlGuiDetectionAreaVisibilityPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? setVisible = null;
            //instance.ControlGuiDetectionAreaVisibilityPost(setVisible);
            
        }
        /// <summary>
        /// Test ControlGuiDetectionBoundingBoxVisibilityGet
        /// </summary>
        [Test]
        public void ControlGuiDetectionBoundingBoxVisibilityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ControlGuiDetectionBoundingBoxVisibilityGet();
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        /// <summary>
        /// Test ControlGuiDetectionBoundingBoxVisibilityPost
        /// </summary>
        [Test]
        public void ControlGuiDetectionBoundingBoxVisibilityPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? setVisible = null;
            //instance.ControlGuiDetectionBoundingBoxVisibilityPost(setVisible);
            
        }
        /// <summary>
        /// Test ControlGuiDetectionColorGet
        /// </summary>
        [Test]
        public void ControlGuiDetectionColorGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DetectionClasses detectionClass = null;
            //var response = instance.ControlGuiDetectionColorGet(detectionClass);
            //Assert.IsInstanceOf<Color> (response, "response is Color");
        }
        /// <summary>
        /// Test ControlGuiDetectionColorPost
        /// </summary>
        [Test]
        public void ControlGuiDetectionColorPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GuiDetectionColorBody body = null;
            //instance.ControlGuiDetectionColorPost(body);
            
        }
        /// <summary>
        /// Test ControlGuiDetectionPolygonVisibilityGet
        /// </summary>
        [Test]
        public void ControlGuiDetectionPolygonVisibilityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ControlGuiDetectionPolygonVisibilityGet();
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        /// <summary>
        /// Test ControlGuiDetectionPolygonVisibilityPost
        /// </summary>
        [Test]
        public void ControlGuiDetectionPolygonVisibilityPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? setVisible = null;
            //instance.ControlGuiDetectionPolygonVisibilityPost(setVisible);
            
        }
        /// <summary>
        /// Test ControlGuiDetectionTextVisibilityGet
        /// </summary>
        [Test]
        public void ControlGuiDetectionTextVisibilityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ControlGuiDetectionTextVisibilityGet();
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        /// <summary>
        /// Test ControlGuiDetectionTextVisibilityPost
        /// </summary>
        [Test]
        public void ControlGuiDetectionTextVisibilityPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? setVisible = null;
            //instance.ControlGuiDetectionTextVisibilityPost(setVisible);
            
        }
        /// <summary>
        /// Test ControlGuiDetectionsVisibilityGet
        /// </summary>
        [Test]
        public void ControlGuiDetectionsVisibilityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ControlGuiDetectionsVisibilityGet();
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        /// <summary>
        /// Test ControlGuiDetectionsVisibilityPost
        /// </summary>
        [Test]
        public void ControlGuiDetectionsVisibilityPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? setVisible = null;
            //instance.ControlGuiDetectionsVisibilityPost(setVisible);
            
        }
    }

}
