/* 
 * SaridaEdgeAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DeviceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DeviceApiTests
    {
        private DeviceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DeviceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DeviceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DeviceApi
            //Assert.IsInstanceOfType(typeof(DeviceApi), instance, "instance is a DeviceApi");
        }

        /// <summary>
        /// Test ControlDeviceRestartPost
        /// </summary>
        [Test]
        public void ControlDeviceRestartPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ControlDeviceRestartPost();
            
        }
        /// <summary>
        /// Test ControlDeviceShutdownPost
        /// </summary>
        [Test]
        public void ControlDeviceShutdownPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ControlDeviceShutdownPost();
            
        }
        /// <summary>
        /// Test WebHookDelete
        /// </summary>
        [Test]
        public void WebHookDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookID = null;
            //instance.WebHookDelete(webhookID);
            
        }
        /// <summary>
        /// Test WebHookDetectionUpdatesPost
        /// </summary>
        [Test]
        public void WebHookDetectionUpdatesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebHookProperties body = null;
            //string webhookID = null;
            //instance.WebHookDetectionUpdatesPost(body, webhookID);
            
        }
        /// <summary>
        /// Test WebHookGet
        /// </summary>
        [Test]
        public void WebHookGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookID = null;
            //var response = instance.WebHookGet(webhookID);
            //Assert.IsInstanceOf<WebHookProperties> (response, "response is WebHookProperties");
        }
    }

}
